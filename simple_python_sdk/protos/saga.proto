syntax = "proto3";

package saga.v1;

import "google/protobuf/timestamp.proto";

service SagaOrchestratorService {
  rpc StartSaga (StartSagaRequest) returns (StartSagaResponse);
  rpc GetSagaStatus (GetSagaStatusRequest) returns (GetSagaStatusResponse);
}

service SagaParticipant {
  rpc Execute (SagaParticipantRequest) returns (SagaParticipantResponse);
  rpc Compensate (SagaParticipantRequest) returns (SagaParticipantResponse);
}

message StartSagaRequest {
  string saga_id = 1;
  repeated SagaStep steps = 2;
  bytes payload = 3;
}

message SagaStep {
  string service_name = 1;
  string rpc_method = 2;
  string compensation_method = 3;
  uint32 timeout_seconds = 4;
}

message StartSagaResponse {
  string saga_id = 1;
  SagaStatus status = 2;
}

message GetSagaStatusRequest {
  string saga_id = 1;
}

message GetSagaStatusResponse {
  string saga_id = 1;
  SagaStatus status = 2;
  int32 current_step = 3;
  string error_message = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  repeated StepExecution steps = 7;
}

message StepExecution {
  int32 step_number = 1;
  string service_name = 2;
  string method_name = 3;
  bool success = 4;
  string error_message = 5;
  google.protobuf.Timestamp executed_at = 6;
  bytes result_payload = 7;
}

message SagaParticipantRequest {
  string saga_id = 1;
  bytes payload = 2;
  map<string, string> headers = 3;
}

message SagaParticipantResponse {
  bool success = 1;
  string error_message = 2;
  bytes result_payload = 3;
}

enum SagaStatus {
  STARTED = 0;
  IN_PROGRESS = 1;
  COMPLETED = 2;
  COMPENSATING = 3;
  COMPENSATED = 4;
  FAILED = 5;
}